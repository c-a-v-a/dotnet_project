@model AutoParts.Web.Data.Entities.ServiceOrder
@using Microsoft.AspNetCore.Identity
@using AutoParts.Web.Data.Entities
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Szczegóły zlecenia";
}

<h2>Szczegóły zlecenia</h2>

<div class="card p-3 mb-3">
    <dl class="row">
        <dt class="col-sm-3">Opis problemu</dt>
        <dd class="col-sm-9">@Model.Description</dd>

        <dt class="col-sm-3">Status</dt>
        <dd class="col-sm-9">@Model.Status</dd>

        <dt class="col-sm-3">Mechanik</dt>
        <dd class="col-sm-9">@Model.Mechanic?.FirstName @Model.Mechanic?.LastName</dd>

        <dt class="col-sm-3">Klient</dt>
        <dd class="col-sm-9">@Model.Customer?.FirstName @Model.Customer?.LastName</dd>

        <dt class="col-sm-3">Pojazd</dt>
        <dd class="col-sm-9">@Model.Vehicle?.Make @Model.Vehicle?.ModelName</dd>

        <dt class="col-sm-3">Data zakończenia</dt>
        <dd class="col-sm-9">@Model.EndDate?.ToString("yyyy-MM-dd") ?? "-"</dd>
    </dl>

    
    <a asp-action="EditStatus" asp-route-id="@Model.Id" class="btn btn-warning">Zmień status</a>
    <a asp-action="Index" class="btn btn-secondary">Powrót</a>

    <h4>Komentarze</h4>

    @if (Model.Comments?.Any() == true)
    {
        <ul class="list-group mb-3">
            @foreach (var comment in Model.Comments.OrderBy(c => c.CreatedAt))
            {
                <li class="list-group-item">
                    <strong>@comment.Author?.FirstName @comment.Author?.LastName</strong>
                    <span class="text-muted">(@comment.CreatedAt.ToString("g"))</span>
                    <div>@comment.Text</div>
                </li>
            }
        </ul>
    }
    else
    {
        <p class="text-muted">Brak komentarzy.</p>
    }

    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="AddComment" method="post">
            <input type="hidden" name="ServiceOrderId" value="@Model.Id" />
            <div class="mb-3">
                <label for="Text" class="form-label">Dodaj komentarz</label>
                <textarea class="form-control" name="Text" required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Dodaj</button>
        </form>
    }
    else
    {
        <p class="text-muted">Zaloguj się, aby dodać komentarz.</p>
    }

</div>

<hr class="my-4 text-secondary" style="opacity: 0.5;" />
<h4>Czynności serwisowe</h4>

@if (Model.Tasks.Any())
{
    <ul>
        @foreach (var task in Model.Tasks)
        {
            <li>
                <strong>@task.Name</strong> - @task.LaborCost zł

                @if (User.IsInRole("Admin") || Model.MechanicId == UserManager.GetUserId(User))
                {
                    <a class="btn btn-sm btn-outline-primary ms-2"
                       asp-action="AddUsedPart"
                       asp-route-taskId="@task.Id">
                        Dodaj część
                    </a>
                }    
            </li>
        }
    </ul>
}
else
{
    <p>Brak zadań.</p>
}

<a class="btn btn-sm btn-success mt-2" asp-action="AddTask" asp-route-orderId="@Model.Id">Dodaj czynność</a>

<hr />


<h4>Części</h4>

<a class="btn btn-sm btn-success mt-2"
   asp-action="AddUsedPart"
   asp-route-taskId="@Model.Tasks.FirstOrDefault()?.Id">
    Dodaj część
</a>

@if (Model.Tasks.Any(t => t.UsedParts != null && t.UsedParts.Any()))
{
    <ul class="ms-4">
        @{
            var groupedParts = Model.Tasks
            .Where(t => t.UsedParts != null)
            .SelectMany(t => t.UsedParts)
            .GroupBy(p => p.Part.Name)
            .Select(g => new
            {
                Name = g.Key,
                TotalQuantity = g.Sum(p => p.Quantity),
                TotalPrice = g.Sum(p => p.TotalPrice)
            });
        }

        <ul class="ms-4">
            @foreach (var part in groupedParts)
            {
                <li>
                    @part.Name – Ilość: @part.TotalQuantity, Cena: @part.TotalPrice zł
                </li>
            }
        </ul>
    </ul>
}
else
{
    <p class="ms-4 text-muted">Brak części</p>
}

<hr class="my-4 text-secondary" style="opacity: 0.5;" />
<h4>Całkowity koszt zlecenia</h4>
@{
    decimal totalLabor = Model.Tasks.Sum(t => t.LaborCost);
    decimal totalParts = Model.Tasks
        .Where(t => t.UsedParts != null)
        .SelectMany(t => t.UsedParts)
        .Sum(p => p.TotalPrice);
    decimal totalCost = totalLabor + totalParts;
}

<ul>
    <li>Robocizna: <strong>@totalLabor zł</strong></li>
    <li>Części: <strong>@totalParts zł</strong></li>
    <li>Suma: <strong>@totalCost zł</strong></li>
</ul>



