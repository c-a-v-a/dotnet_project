@model AutoParts.Web.Models.ServiceOrderModel;
@using AutoParts.Web.Enums;

@{
    ViewData["Title"] = "Order details";
}

<dev class="card">
  <div class="card-header d-flex justify-content-start align-items-center">
    <h4 class="my-auto">Order details</h4>
  </div>
    <div class="card-body d-flex flex-column justify-content-start align-items-start w-100">
        <h5 class="fw-bold">Information</h5>
        <h6>Customer: @Model.Customer.FirstName @Model.Customer.LastName</h6>
        <h6>Vehicle: @Model.Vehicle.Make @Model.Vehicle.ModelName @Model.Vehicle.Year</h6>
        <h6>Total cost: @Model.TotalCost</h6>

        @if (Model.Mechanic != null)
        {
        <h6>Mechanic: @Model.Mechanic.FirstName @Model.Mechanic.LastName</h6>
        }
        else
        {
        <h6>Mechanic: ---</h6>
        }
        <form asp-action="Update" method="post" class="needs-validation d-flex flex-column justify-content-start align-items-start w-100" novalidate>
            <input type="hidden" asp-for="Id" value="@Model.Id"/>
            <div class="mb-3 form-floating w-50">
                <select asp-for="MechanicId" class="form-control" placeholder="Mechanic" disabled="@(Model.Status == OrderStatus.Finished)">
                    @foreach (var mechanic in ViewBag.Mechanics)
                    {
                        <option value="@mechanic.Id" selected="@(Model.MechanicId == mechanic.Id)">
                            @mechanic.FirstName @mechanic.LastName
                        </option>
                    }
                </select>
                <label asp-for="MechanicId" class="form-label">Mechanic</label>
                <span asp-validation-for="MechanicId" class="text-danger"></span>
            </div>
            <div class="mb-3 form-floating w-50">
                <select asp-for="Status" class="form-control" placeholder="Status" disabled="@(Model.Status == OrderStatus.Finished)">
                    @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                    {
                        <option value="@status" selected="@(Model.Status == status)">
                            @status
                        </option>
                    }
                </select>
                <label asp-for="Status" class="form-label">Order status</label>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            @if (Model.Status != OrderStatus.Finished)
            {
            <button class="btn btn-primary w-50 mb-3" type="submit">Save changes</button>
            }
        </form>
        <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="needs-validation w-100" onsubmit="return confirm('Are you sure you want to delete this order?');" novalidate>
            <button class="btn btn-danger w-50 mb-3" type="submit">Delete Order</button>
        </form>

        <h5 class="fw-bold mt-5">Tasks</h5>
        @foreach (var task in Model.Tasks)
        {
            <details class="mx-2 w-50 border-secondary bg-light p-3">
                <summary class="fw-bold">@task.Name</summary>
                <div class="w-100">
                    <p>Description: @task.Description</p>
                    <p>Labor cost: @task.LaborCost</p>
                    <p>Total: @task.TotalCost</p>

                    <h6 class="fw-bold mt-2">Parts<h6>
                    <table class="table table-bordered align-middle text-center w-100">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Quantity</th>
                                <th>Unit price</th>
                                <th>Total price</th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var usedPart in task.UsedParts)
                            {

                            <partial name="_UsedPartPartial", model="usedPart", view-data='new ViewDataDictionary(ViewData){ { "Id", Model.Id} }' />
                            }
                        </tbody>
                    </table>
                    <a href="@Url.Action("Create", "UsedPart", new { serviceTaskId = task.Id, serviceOrderId = Model.Id} )" class="btn btn-primary" title="Add task">Add parts</a>

                </div>
            </details>
        }
        <a href="@Url.Action("Create", "ServiceTask", new { serviceOrderId = Model.Id} )" class="btn btn-primary w-50 mt-3" title="Add task">Add task</a>

        <h5 class="fw-bold mt-5">Comments</h5>

        <div class="bg-light border-secondary w-50 py-2 px-3">
            @foreach (var comment in Model.Comments)
            {
            <p><span class="text-primary fst-italic">@comment.Author.FirstName @comment.Author.LastName at @comment.CreatedAt</span> - @comment.Text</p>
            }
        </div>

        <a href="@Url.Action("Create", "Comment", new { serviceOrderId = Model.Id} )" class="btn btn-primary w-50 mt-3" title="Add task">Add comment</a>
    </div>
<dev>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
